/*
--------------------
Program: ESQUI
Info and Bugs: {marf,rsantana}@ctm.ulpgc.es 
-------------------------------------------

Copyright (c) 2006, Center for Technology in Medicine, University of Las Palmas
de Gran Canaria (Canary Islands, Spain).
All rights reserved.

This program is free software; you can redistribute it and/or modify it under 
the terms of the Creative Commons' "by-attribution" license 
(http://creativecommons.org/licenses/by/2.5).

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1) Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
2) Redistributions in binary form must reproduce the above copyright 
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.


THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS''
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
=============================================================================*/
#ifndef __vtkSimulation_h
#define __vtkSimulation_h

#include "vtkESQuiManagerWin32Header.h"
#include "vtkObject.h"
#include "vtkObjectFactory.h"

#include "vtkSimulationManager.h"
#include "vtkScenario.h"
#include "vtkTool.h"
#include "vtkCallbackCommand.h"
#include "vtkRenderWindowInteractor.h"
#include "vtkRenderWindow.h"
#include "vtkPolyDataNormals.h"
#include "vtkPointData.h"
#include "vtkMultiThreader.h"

#ifndef VTKESQUI_USE_NO_HAPTICS
	#include "vtkHaptic.h"
#endif


#ifdef _SOLARIS_
	/* Must be a Sun machine */
	#include <thread.h>
#endif

//! Implementation of the simulation manager. Manages all the operations required to run the simulation

class VTK_ESQUI_MANAGER_EXPORT vtkSimulation: public vtkObject
{
public:

	vtkTypeRevisionMacro(vtkSimulation,vtkObject);
	static vtkSimulation* New();
	const char *GetClassName() {return "vtkSimulation";}
	//!Print class values
	void PrintSelf(ostream &os, vtkIndent indent);

	//! Initializes the simulation (Haptic, Manager, etc...)
	void Init();

	//! Executes a simulation step calling the needed methods.
	void Update();

	//!Update the simulation Manager. The whole Scenario is updated
	void UpdateManager();

	//!Update the haptic state and obtains the value of the force feedback for the haptic device
	void UpdateHaptic();

	//! Set/Get the use of haptic in the simulation
	void SetUseHaptic(bool value){this->UseHaptic = value;};
	bool GetUseHaptic(){return this->UseHaptic;};

	//!Enable the use of haptic
	void UseHapticOn(){this->SetUseHaptic(true);};
	//!Disable the use of haptic
	void UseHapticOff(){this->SetUseHaptic(false);};

	//! Set the collision detection manager
	/*!
	 * \param manager collision detection manager
	 * \sa GetCollisionManager
	 */
	void SetSimulationManager(vtkSimulationManager *manager);

	//! Get the collision detection manager
	/*!
	 * \sa SetCollisionManager(vtkCollisionManager *manager)
	 */
	vtkSimulationManager* GetSimulationManager();

	//!Set active tool on the simulation
	/*!
	 * \param Tool tool identifier
	 * \sa GetActiveTool()
	 */
	void SetActiveTool(vtkIdType Tool);

	//!Get active tool on the simulation
	/*!
	* \return tool identifier
	* \sa SetActiveTool(vtkIdType Tool)
	*/
	vtkIdType GetActiveTool();
	
	//! Print all the contact points and its values
	void PrintContacts();

#ifndef VTKESQUI_USE_NO_HAPTICS
  //BTX
	///////////////////////////////////////////////////////////////////////////

	//! Set the haptic device for the simulation///
	void SetHapticDevice(vtkHaptic *Haptic) {this->HapticDevice = Haptic;}	///
	//! Get the haptic device for the simulation							///
	vtkHaptic *GetHapticDevice() {return this->HapticDevice;}					///
	protected:																///
	//! The haptic device for the simulator									///
	vtkHaptic *HapticDevice;													///

	///////////////////////////////////////////////////////////////////////////
  //ETX
#endif

protected:
	 
	vtkSimulation();
	~vtkSimulation();
   
	//!Collision detection manager
	vtkSimulationManager *SimulationManager;

	//!Window interactor to control simulation display
	vtkRenderWindowInteractor *Interactor;
	
	//!Multiple Threader
	vtkMultiThreader * Threader;

	//!Currently active tool id
	vtkIdType ActiveTool;

	//! Organ mesh normal points
	vtkPolyDataNormals * NormalsFilter;

	//! Enable/disable haptic device usage
	bool UseHaptic;

private:
	vtkSimulation(const vtkSimulation &);
	void operator=(const vtkSimulation &);
};
#endif
